name: Deploy Astra to GKE
on:
  push:
    branches:
        - mainnet
        - staging
        - testnet
        - feature/**
  pull_request:
    types: [opened, edited, reopened, synchronize]
    branches:
        - mainnet
        - staging
        - testnet
        - feature/**

jobs:
  sonar-scan:
    name: "SonarCloud Scan"
    runs-on: ubuntu-latest
    steps: 
      - name: "Checkout repository on branch: ${{ github.REF }}"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.HEAD_REF }}
          fetch-depth: 0

      - name: ES Lint
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
    
      - run: npm install -g pnpm
      - run: pnpm install

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
  write-creds-from-secrets:
    name: "Write env from secrets"
    runs-on: ubuntu-latest
    needs: [sonar-scan]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Write testnet .env from secrets
        id: testnet-backend_creds
        if: ${{ steps.branch-names.outputs.ref_branch != 'mainnet' || 'staging' }}
        run: |
          echo "${{ secrets.ASTRA_BACKTEND_ENV }}" > .env
        env:
          ASTRA_ENV: ${{ secrets.ASTRA_BACKTEND_ENV }}

      - name: Write staging .env from secrets
        id: staging-backend_creds
        if: ${{ steps.branch-names.outputs.ref_branch == 'staging' }}
        run: |
          echo "${{ secrets.STAGING_ENV }}" > .env
        env:
          ASTRA_ENV: ${{ secrets.STAGING_ENV }}

      - name: Write mainnet .env from secrets
        id: mainnet-backend_creds
        if: ${{ steps.branch-names.outputs.ref_branch == 'mainnet' }}
        run: |
          echo "${{ secrets.MAINNET_ENV }}" > .env
        env:
          ASTRA_ENV: ${{ secrets.MAINNET_ENV }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: creds-artifact
          path: .env
    
  docker-build-and-push:
    name: "Docker Build and Push"
    runs-on: ubuntu-latest
    needs: [sonar-scan, write-creds-from-secrets]

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: creds-artifact
          path: ./
    
      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Build testnet docker image
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          BRANCH_NAME=${{ steps.branch-names.outputs.ref_branch }}-${GITHUB_SHA::7}
          SAFE_BRANCH_NAME=${BRANCH_NAME//\//-}
          docker build -t us-central1-docker.pkg.dev/tmgalaxy/astra-testnet/astra-backend:$SAFE_BRANCH_NAME .

      - name: Push image to artifact registry
        if: (github.ref == 'refs/heads/testnet' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/mainnet') && (github.event.pull_request.merged == true || github.event_name == 'push')
        run: |
          BRANCH_NAME=${{ steps.branch-names.outputs.ref_branch }}-${GITHUB_SHA::7}
          SAFE_BRANCH_NAME=${BRANCH_NAME//\//-}
          docker push us-central1-docker.pkg.dev/tmgalaxy/astra-testnet/astra-backend:$SAFE_BRANCH_NAME


      - name: Update values.yaml with image tag
        run: |
          BRANCH_NAME=${{ steps.branch-names.outputs.ref_branch }}-${GITHUB_SHA::7}
          SAFE_BRANCH_NAME=${BRANCH_NAME//\//-}
          sed -i "s/tag: .*/tag: ${SAFE_BRANCH_NAME}/" ./helm/astra-backend/helmvars/${{ steps.branch-names.outputs.ref_branch }}/values.yaml
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add ./helm/astra-backend/helmvars/${{ steps.branch-names.outputs.ref_branch }}/values.yaml
          git commit -m "Update image tag to ${SAFE_BRANCH_NAME} [skip ci]"
          git fetch
          git pull --rebase origin ${{ github.ref }}
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.ARGOCD_PAT }}
  
      - name: Install ArgoCD CLI
        run: curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.1.7/argocd-linux-amd64 && chmod +x /usr/local/bin/argocd
  
      - name: Trigger ArgoCD sync for alpha
        run: |
          BRANCH_NAME=${{ steps.branch-names.outputs.ref_branch }}-${GITHUB_SHA::7}
          SAFE_BRANCH_NAME=${BRANCH_NAME//\//-}
          argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure --grpc-web
          argocd app sync astradao-backend-${{ steps.branch-names.outputs.ref_branch }}
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
